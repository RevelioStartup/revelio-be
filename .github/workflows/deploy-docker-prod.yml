name: Deploy to Docker

on:
  push:
    branches: 
        - main

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Set Up Environment Variables
      run: |
        echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
        echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env
        echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
        echo "DB_USER=${{ secrets.DB_USER }}" >> .env
        echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env
        echo "EMAIL_HOST=${{ secrets.EMAIL_HOST }}" >> .env
        echo "EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}" >> .env
        echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >> .env
        echo "DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }}" >> .env
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
        echo "OPENAI_API_ORGANIZATION_ID=${{ secrets.OPENAI_API_ORGANIZATION_ID }}" >> .env
        echo "GCP_PRIVATE_KEY=${{ secrets.GCP_PRIVATE_KEY }}" >> .env
        echo "GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}" >> .env
        echo "GCP_PRIVATE_KEY_ID=${{ secrets.GCP_PRIVATE_KEY_ID }}" >> .env
        echo "GCP_CLIENT_EMAIL=${{ secrets.GCP_CLIENT_EMAIL }}" >> .env
        echo "GCP_CLIENT_ID=${{ secrets.GCP_CLIENT_ID }}" >> .env
        echo "GCP_AUTH_URI=${{ secrets.GCP_AUTH_URI }}" >> .env
        echo "GCP_TOKEN_URI=${{ secrets.GCP_TOKEN_URI }}" >> .env
        echo "GCP_AUTH_PROVIDER_X509_CERT_URL=${{ secrets.GCP_AUTH_PROVIDER_X509_CERT_URL }}" >> .env
        echo "GCP_CLIENT_X509_CERT_URL=${{ secrets.GCP_CLIENT_X509_CERT_URL }}" >> .env
        echo "GCP_UNIVERSE_DOMAIN=${{ secrets.GCP_UNIVERSE_DOMAIN }}" >> .env
        echo "MIDTRANS_API_BASE_URL=${{ secrets.MIDTRANS_API_BASE_URL }}" >> .env
        echo "MIDTRANS_SERVER_KEY=${{ secrets.MIDTRANS_SERVER_KEY }}" >> .env
        echo "MIDTRANS_CLIENT_KEY=${{ secrets.MIDTRANS_CLIENT_KEY }}" >> .env
        echo "MIDTRANS_IS_PRODUCTION=${{ secrets.MIDTRANS_IS_PRODUCTION }}" >> .env
        echo "REVELIO_FE_BASE_URL=${{ secrets.REVELIO_FE_BASE_URL }}" >> .env
        

    - name: Run Tests
      run: |
        python manage.py test
  
  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3

    - name: Login to Docker
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Set Up Environment Variables
      run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env
          echo "EMAIL_HOST=${{ secrets.EMAIL_HOST }}" >> .env
          echo "EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}" >> .env
          echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >> .env
          echo "DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }}" >> .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          echo "OPENAI_API_ORGANIZATION_ID=${{ secrets.OPENAI_API_ORGANIZATION_ID }}" >> .env
          echo "GCP_PRIVATE_KEY=${{ secrets.GCP_PRIVATE_KEY }}" >> .env
          echo "GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}" >> .env
          echo "GCP_PRIVATE_KEY_ID=${{ secrets.GCP_PRIVATE_KEY_ID }}" >> .env
          echo "GCP_CLIENT_EMAIL=${{ secrets.GCP_CLIENT_EMAIL }}" >> .env
          echo "GCP_CLIENT_ID=${{ secrets.GCP_CLIENT_ID }}" >> .env
          echo "GCP_AUTH_URI=${{ secrets.GCP_AUTH_URI }}" >> .env
          echo "GCP_TOKEN_URI=${{ secrets.GCP_TOKEN_URI }}" >> .env
          echo "GCP_AUTH_PROVIDER_X509_CERT_URL=${{ secrets.GCP_AUTH_PROVIDER_X509_CERT_URL }}" >> .env
          echo "GCP_CLIENT_X509_CERT_URL=${{ secrets.GCP_CLIENT_X509_CERT_URL }}" >> .env
          echo "GCP_UNIVERSE_DOMAIN=${{ secrets.GCP_UNIVERSE_DOMAIN }}" >> .env
          echo "MIDTRANS_API_BASE_URL=${{ secrets.MIDTRANS_API_BASE_URL }}" >> .env
          echo "MIDTRANS_SERVER_KEY=${{ secrets.MIDTRANS_SERVER_KEY }}" >> .env
          echo "MIDTRANS_CLIENT_KEY=${{ secrets.MIDTRANS_CLIENT_KEY }}" >> .env
          echo "MIDTRANS_IS_PRODUCTION=${{ secrets.MIDTRANS_IS_PRODUCTION }}" >> .env
          echo "REVELIO_FE_BASE_URL=${{ secrets.REVELIO_FE_BASE_URL }}" >> .env
          
    
    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest .

    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - uses : actions/checkout@v3
      - name: SSH to GCP
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DOCKER_SSH_HOST }}
          username: ${{ secrets.DOCKER_SSH_USERNAME }}
          key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
          port: 22
          passphrase: ${{ secrets.DOCKER_SSH_PASSPHRASE }}
          script: |
            sudo docker login --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
            sudo docker container rm -f ${{ secrets.DOCKER_IMAGE_NAME }} || true
            sudo docker image rm -f ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest || true
            sudo docker run --name ${{ secrets.DOCKER_IMAGE_NAME }} -d -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest